# IDEAS:
# https://github.com/regen100/dotfiles/blob/master/tmux/.config/tmux/tmux.conf
# https://github.com/josean-dev/dev-environment-files/blob/main/.tmux.conf

# -------------------------------------------------------------------------------------------------
# GENERAL SETTINGS
# -------------------------------------------------------------------------------------------------
set -g history-limit 20000

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# Enable mouse support
set -g mouse on

# nvim settings
set-option -g focus-events on
set -sg escape-time 0

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# -------------------------------------------------------------------------------------------------
# END
# -------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------
# THEME
# -------------------------------------------------------------------------------------------------
color_orange="colour166" # 208, 166
# color_orange="#ff8c00" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_dark,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] \
#I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 2
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
# $wg_battery #{sysstat_loadavg}
set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{gpu} | $wg_user_host | $wg_date #{online_status}"

# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$color_level_ok]●#[default]"
set -g @offline_icon "#[fg=$color_level_stress]●#[default]"

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_gpu_view_tmpl 'GPU:#[fg=#{gpu.color}]#{gpu.pused}#[default] #{gpu.gbused}'
set -g @sysstat_cpu_view_tmpl 'CPU:#[fg=#{cpu.color}]#{cpu.pused}#[default]'
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"

# -------------------------------------------------------------------------------------------------
# END
# -------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------
# KEYBINDS
# -------------------------------------------------------------------------------------------------

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# Reload tmux configuration
bind M-r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"
# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Split panes
unbind s    # sesion selector
bind M-s choose-session
unbind %    # split-window -h
unbind '"'  # split-window
bind s split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

bind -r C-h select-pane -t :.-
bind -r C-l select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D
bind -r C-[ swap-window -t -1\; select-window -t -1
bind -r C-] swap-window -t +1\; select-window -t +1

unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
bind -r C-p previous-window
bind -r C-n next-window

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
    set -u prefix \;\
    set -u key-table \;\
    set -u status-style \;\
    set -u window-status-current-style \;\
    set -u window-status-current-format \;\
    refresh-client -S

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
# -------------------------------------------------------------------------------------------------
# END
# -------------------------------------------------------------------------------------------------
# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer
bind M-p choose-buffer

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# -------------------------------------------------------------------------------------------------
# PLUGINS
# -------------------------------------------------------------------------------------------------
# Setup the plugin manager
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'
TMUX_PLUGIN_MANAGER_PATH='~/.local/share/tmux/plugins'
if "[ ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm ]" \
    "run 'mkdir -p $TMUX_PLUGIN_MANAGER_PATH && \
    git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm && \
    $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins'"

# TODO: add nvim tmux plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'arminveres/tmux-plugin-gpu'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'off'

run $TMUX_PLUGIN_MANAGER_PATH'/tpm/tpm'
# -------------------------------------------------------------------------------------------------
# END
# -------------------------------------------------------------------------------------------------
